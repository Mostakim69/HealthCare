[
    {
      "id": 1,
      "question": "What is useState and how does it work in React?",
      "answer": "useState is a React hook to manage state in functional components. It returns a state variable and a function to update it. When the state updates, the component re-renders with the new value."
    },
    {
      "id": 2,
      "question": "What is the purpose of useEffect in React?",
      "answer": "useEffect handles side effects in React, like data fetching or DOM updates. It runs after every render by default or when dependencies change. You can also use it for cleanup with a return function."
    },
    {
      "id": 3,
      "question": "What is a custom hook in React and when should you use one?",
      "answer": "A custom hook is a reusable function in React that uses built-in hooks. Use it to share logic across components, like form handling or API calls. It keeps your code DRY and maintainable."
    },
    {
      "id": 4,
      "question": "Difference between controlled and uncontrolled components? Which one is better?",
      "answer": "Controlled components have their value managed by React state, while uncontrolled components use refs. Controlled components offer better control and validation. Theyâ€™re generally preferred for complex forms."
    },
    {
      "id": 5,
      "question": "Tell us something about useFormStatus() (explore and explain)",
      "answer": "useFormStatus() is a React hook to track form submission status. It provides pending, success, or error states during form actions. Useful for showing loading spinners or success messages."
    }
  ]